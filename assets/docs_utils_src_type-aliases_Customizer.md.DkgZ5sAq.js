import{_ as a,c as t,a2 as r,o}from"./chunks/framework.BHqca9nO.js";const h=JSON.parse('{"title":"Type Alias: Customizer()<T>","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/src/type-aliases/Customizer.md","filePath":"docs/utils/src/type-aliases/Customizer.md","lastUpdated":1737615356000}'),s={name:"docs/utils/src/type-aliases/Customizer.md"};function l(c,e,i,d,u,n){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../README.html"><strong>can-framework</strong></a></p><hr><p><a href="./../../../modules.html">can-framework</a> / <a href="./../README.html">utils/src</a> / Customizer</p><h1 id="type-alias-customizer-t" tabindex="-1">Type Alias: Customizer()&lt;T&gt; <a class="header-anchor" href="#type-alias-customizer-t" aria-label="Permalink to &quot;Type Alias: Customizer()\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>Customizer</strong>&lt;<code>T</code>&gt;: (<code>targetValue</code>, <code>sourceValue</code>) =&gt; <code>T</code></p></blockquote><p>Defined in: <a href="https://github.com/acanowl/acanowl-framework/blob/803929d309daee638a276dd80756bc2cc91479c5/packages/utils/src/object/index.ts#L48" target="_blank" rel="noreferrer">utils/src/object/index.ts:48</a></p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong> = <code>unknown</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="targetvalue" tabindex="-1">targetValue <a class="header-anchor" href="#targetvalue" aria-label="Permalink to &quot;targetValue&quot;">​</a></h3><p><code>T</code></p><h3 id="sourcevalue" tabindex="-1">sourceValue <a class="header-anchor" href="#sourcevalue" aria-label="Permalink to &quot;sourceValue&quot;">​</a></h3><p><code>T</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code></p>',15)]))}const m=a(s,[["render",l]]);export{h as __pageData,m as default};
